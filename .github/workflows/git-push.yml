# name: git push into another repo to deploy to vercel

# on:
#   push:
#     branches: [main]

# jobs:
#  build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'  
#           cache: 'yarn'  

#       - name: Check Yarn Version
#         run: yarn --version 

#       - name: Install dependencies
#         run: yarn install --immutable 

#       - name: Build the project
#         run: yarn build 

#       - name: Prepare output
#         run: |
#           mkdir -p output
#           cp -r .next/* output/  # Adjust according to your deployment needs

name: git push into another repo to deploy to vercel

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    container: pandoc/latex
    steps:
      # - uses: actions/checkout@v2
      # - name: Install mustache (to update the date)
      #   run: apk add ruby && gem install mustache
      # - name: creates output
      #   run: sh ./build.sh
      - uses: actions/checkout@v2
      - name: Setup environment
        run: sudo apt-get update && sudo apt-get install -y [necessary packages]
      - name: Execute build script
        run: bash ./build.sh
      - name: Pushes to another repository
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.HANDAGGLE_CCA_FE_KEY }}
        with:
          source-directory: 'output'
          destination-github-username: handaggle
          destination-repository-name: cca-fe
          user-email: ${{ secrets.HANDAGGLE_EMAIL }}
          commit-message: 'Deploying build'
          target-branch: main
      - name: Test get variable exported by push-to-another-repository
        run: echo $DESTINATION_CLONED_DIRECTORY

# name: Build and Deploy

# on:
#   push:
#     branches: [main]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: '20'
#           cache: 'yarn'

#       - name: Install Yarn Berry
#         run: yarn set version berry

#       - name: Install dependencies
#         run: yarn install --immutable

#       - name: Build the project
#         run: yarn build

#       - name: Execute additional commands
#         run: yarn dev  # or any other command you need to run

#       - name: Pushes to another repository
#         uses: cpina/github-action-push-to-another-repository@main
#         env:
#           API_TOKEN_GITHUB: ${{ secrets.HANDAGGLE_CCA_FE_KEY }}
#         with:
#           source-directory: 'output'
#           destination-github-username: handaggle
#           destination-repository-name: cca-fe
#           user-email: ${{ secrets.HANDAGGLE_EMAIL }}
#           commit-message: 'Deploying build'
#           target-branch: main

#       - name: Echo the output directory
#         run: echo $DESTINATION_CLONED_DIRECTORY
